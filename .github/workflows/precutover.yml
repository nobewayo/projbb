name: Pre-Cutover Health Checks
on: [push, pull_request]
jobs:
  green:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_PASSWORD: bitby
          POSTGRES_USER: bitby
          POSTGRES_DB: bitby
        ports: ["5432:5432"]
        options: >-
          --health-cmd="pg_isready -U bitby"
          --health-interval=5s --health-timeout=5s --health-retries=30
      redis:
        image: redis:7-alpine
        ports: ["6379:6379"]
        options: >-
          --health-cmd="redis-cli ping || exit 1"
          --health-interval=5s --health-timeout=5s --health-retries=30
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - name: Enable pnpm and install
        run: |
          corepack enable
          pnpm i --frozen-lockfile || pnpm i
          pnpm add -Dw socket.io-client ioredis pg tsx
      - name: Build
        run: |
          pnpm --filter @bitby/schemas build || true
          pnpm --filter @bitby/server build || true
          pnpm --filter @bitby/client build || true
      - name: Start server
        env:
          POSTGRES_URL: postgres://bitby:bitby@localhost:5432/bitby
          REDIS_URL: redis://localhost:6379
          JWT_SECRET: dev-secret
        run: |
          (pnpm --filter @bitby/server start || pnpm --filter @bitby/server dev) &
          for i in {1..90}; do
            curl -fsS http://localhost:3001/healthz && curl -fsS http://localhost:3001/readyz && break
            sleep 1
          done
      - name: Pass 1
        run: npx tsx tools/ci/green-checks.ts
      - name: Wait 60s
        run: sleep 60
      - name: Pass 2
        run: npx tsx tools/ci/green-checks.ts
      - name: Wait 60s
        run: sleep 60
      - name: Pass 3
        run: npx tsx tools/ci/green-checks.ts
